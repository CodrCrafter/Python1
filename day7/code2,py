#class BankAccount:
 #   def __init__(self, balance):
  #      self._balance = balance
    
  #  def deposit(self,amount):
   #     self._balance += amount

    #def get_balance(self):
     #   return self._balance

#account = BankAccount(2000)
#account.deposit(300)
#print(account.get_balance())
#------------------------------------------------------------------

#2prg  inheritance
#(parent class)
#class Animal:
 #   def speak(self):
  #      print("Animal is making sound")

#(child class)
#class Dog(Animal):
 #   def speak(self):
  #      print("Dog is barking")

#(creating an object of child class)
#my_dog = Dog()
#my_dog.speak()

#---------------------------------------------------------------

#3prg 

class Bird:
    def fly(self):
        print("the bird is flying")

class Airplane:
    def fly(self):
        print("Airplane is flying")

def make_it_fly(flying_object):
    flying_object.fly()

sparrow = Bird()
boeing = Airplane()

make_it_fly(sparrow)
make_it_fly(boeing)
